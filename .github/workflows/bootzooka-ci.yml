name: Bootzooka CI

on:
  pull_request:
  push:
    tags: [v*]
    branches:
      - master
    paths-ignore:
      - "helm/**"
  release:
    types:
      - released

jobs:
  verify:
    runs-on: ubuntu-24.04

    steps:
      - name: Check-out repository
        id: repo-checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'sbt'

      - uses: sbt/setup-sbt@v1    

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Generate OpenAPI Spec
        id: generate-openapi-spec
        run: sbt "backend/generateOpenAPIDescription"

      - name: Run tests
        id: run-tests
        run: sbt test

      - name: Test UI build
        id: test-ui-build
        run: yarn build
        working-directory: ./ui

  deploy:
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v')
    needs: [ verify ]
    runs-on: ubuntu-24.04

    steps:
      - name: Check-out repository
        id: repo-checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
          cache: 'sbt'

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version
        run: |
          version=${GITHUB_REF/refs\/tags\/v/}
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Publish release notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yaml
          publish: true
          name: "v${{ env.VERSION }}"
          tag: "v${{ env.VERSION }}"
          version: "v${{ env.VERSION }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Publish docker image
        run: sbt backend/docker:publish

  # `automerge` label is attached iff there is exactly one file changed by steward and this file belongs to a
  # whitelist specified by `labeler.yml`
  label:
    name: Attach automerge label
    # only for PRs by softwaremill-ci
    if: github.event.pull_request.user.login == 'softwaremill-ci'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      # count number of files changed
      - name: Count number of files changed
        id: count-changed-files
        run: |
          N=$(git diff --name-only -r HEAD^1 HEAD | wc -w)
          echo "changed_files_num=$N" >> $GITHUB_OUTPUT
      - name: Launch labeler
        # skip if more than one file changed
        if: steps.count-changed-files.outputs.changed_files_num == 1
        uses: srvaroa/labeler@master
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  auto-merge:
    name: Auto merge
    # only for PRs by softwaremill-ci
    if: github.event.pull_request.user.login == 'softwaremill-ci'
    needs: [ verify, label ]
    runs-on: ubuntu-24.04
    steps:
      - id: automerge
        name: automerge
        uses: "pascalgn/automerge-action@v0.15.6"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_METHOD: "squash"
